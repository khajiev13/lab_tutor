{"extractions": [{"extraction_class": "TOPIC", "extraction_text": "Four Main Types of NoSQL Databases", "char_interval": {"start_pos": 254, "end_pos": 269}, "alignment_status": "match_lesser", "extraction_index": 1, "group_index": 0, "description": null, "attributes": null}, {"extraction_class": "SUMMARY", "extraction_text": "This session introduces the four main categories of NoSQL databases: Key-value, Column-oriented, Graph-based, and Document-oriented. Each type has unique attributes, and the choice depends on specific product needs. Key-value databases store data in simple (key, value) pairs, offering high performance and scalability for schema-less data like shopping carts, but lack support for value-based queries. Column-oriented databases, based on Google's BigTable, store data by columns, enabling high compression and efficient aggregation queries (SUM, COUNT), making them suitable for data warehouses and business intelligence. Document-oriented databases store data in flexible, self-describing documents like JSON or XML, ideal for content management systems and applications with semi-structured data. Finally, Graph databases model data as vertices (entities) and edges (relationships), excelling at managing highly connected data for social networks, recommendation systems, and dependency analysis by making relationship traversal extremely fast.", "char_interval": null, "alignment_status": null, "extraction_index": 2, "group_index": 0, "description": null, "attributes": null}, {"extraction_class": "KEYWORDS", "extraction_text": "NoSQL, Key-value database, Column-oriented database, Document-oriented database, Graph database, schema-less, JSON, BigTable, data modeling, scalability", "char_interval": null, "alignment_status": null, "extraction_index": 3, "group_index": 0, "description": null, "attributes": null}, {"extraction_class": "CONCEPT", "extraction_text": "NoSQL Database", "char_interval": {"start_pos": 270, "end_pos": 284}, "alignment_status": "match_fuzzy", "extraction_index": 4, "group_index": 0, "description": null, "attributes": {"definition": "A type of database categorized into four main types: Key-value pair, Column-oriented, Graph-based, and Document-oriented. The appropriate type is selected based on specific product needs as no single type is best for all problems."}}, {"extraction_class": "CONCEPT", "extraction_text": "Key-value Database", "char_interval": {"start_pos": 612, "end_pos": 630}, "alignment_status": "match_fuzzy", "extraction_index": 5, "group_index": 1, "description": null, "attributes": {"definition": "A NoSQL database that stores data in key/value pairs. It is designed to handle large amounts of data and heavy loads, where data values are queried by a key. The value can be any data type, and it is suitable for storing schema-less data like shopping cart contents."}}, {"extraction_class": "CONCEPT", "extraction_text": "Column-oriented Database", "char_interval": {"start_pos": 1684, "end_pos": 1709}, "alignment_status": "match_fuzzy", "extraction_index": 6, "group_index": 2, "description": null, "attributes": {"definition": "A NoSQL database based on Google's BigTable paper that works on columns. Data is retrieved, stored, and managed based on columns, where keys point to columns rather than rows. It delivers high performance on aggregation queries like SUM, COUNT, and AVG and is used for data warehouses and business intelligence."}}, {"extraction_class": "CONCEPT", "extraction_text": "Document-oriented Database", "char_interval": {"start_pos": 392, "end_pos": 506}, "alignment_status": "match_fuzzy", "extraction_index": 7, "group_index": 3, "description": null, "attributes": {"definition": "A NoSQL database that stores and retrieves data as a key-value pair where the value is a document, typically in JSON or XML format. These documents are schema-less, self-describing, and can contain complex nested data structures, making them suitable for content management systems and e-commerce applications."}}, {"extraction_class": "CONCEPT", "extraction_text": "Graph Database", "char_interval": {"start_pos": 6300, "end_pos": 6314}, "alignment_status": "match_exact", "extraction_index": 8, "group_index": 4, "description": null, "attributes": {"definition": "A NoSQL database that models data as points (vertices) and edges, representing entities and the relationships between them. Relationships are directly stored in the database, making traversal fast. It is ideal for handling highly related data found in social networking, recommendation systems, and pattern recognition."}}], "text": "Hello everyone, I am Haiying Che, from  Institute of Data Science and knowledge Engineering\nSchool of Computer Science, in Beijing Institute of Technology , from this session ,\nwe start to learn Data storing system, and in this session we discuss about  Four main types NoSQL Database .\nNoSQL Databases are mainly categorized into four types: Key-value pair, Column-oriented, Graph-based and Document-oriented. \nEvery category has its unique attributes and limitations. None of the above-specified database is better to solve all the problems. \nUsers should select the database based on their product needs.\nThe key-value database is based on key-value pairs (key, value) to store and query data. \nData is stored in key/value pairs. It is designed in such a way to handle lots of data and heavy load.\nThe basic idea is that the data value is queried by the key, the key can be a string type, and the value can be any type of data, such as integer, character, array, list, collection, JSON, BLOB(Binary Large Objects)etc. \nThe underlying structure can use the hash table to index and manage the keys to support fast query. \nBut the key-value database does not support queries based on data values\nIt is one of the most basic NoSQL database example. \nThis kind of NoSQL database is used as a collection, dictionaries, associative arrays, etc. \nKey value stores help the developer to store schema-less data. They work best for shopping cart contents.\nAdvantages of key-value database is Good scalability, flexibility, and high performance when writing in large numbers.\nAnd disadvantage of key-value database is it Can't store structured information and conditional query is inefficient\nColumn-oriented databases work on columns and are based on BigTable paper by Google. \nThe column storage database adopts the column storage structure, which is also called DSM (decomposition storage model), \nwhich means that the data is retrieved, stored and managed based on the range (column). \nColumn storage still uses keys, but the keys point to columns. \nThe column storage database supports high compression ratios.\nThe query on data fields under large-scale data is very efficient, but it is not suitable for real-time deletion or updating of entire records and does not support data tables. join operation\nEvery column is treated separately. Values of single column databases are stored contiguously.\nColumn based NoSQL database deliver high performance on aggregation queries like SUM, COUNT, AVG, MIN etc. as the data is readily available in a column.\nColumn-based NoSQL databases are widely used to manage data warehouses, business intelligence, CRM, Library card catalogs.\nAdvantages of column storage database is Fast search speed, strong scalability, easy distributed extension, low complexity.\nAnd disadvantage of column storage database is Fewer features, most do not support strong transaction consistency .\nDocument-Oriented NoSQL DB stores and retrieves data as a key value pair but the value part is stored as a document. \nThe document is stored in JSON or XML formats. The value is understood by the DB and can be queried.\nThe document database is organized around a series of semantically self-contained documents to organize data management. \nDocuments have no schema, which means that documents do not require a specific structure. which make it flexible.\nA document database is actually a collection of documents. A document is actually a data record. \nThis record can \"self-describe\" the type and content of the data contained.\nXML documents, HTML documents and JSON documents fall into this category.\nThe data record contained in each document is a collection of a series of data items.\nEach data item has a name and a corresponding value. The value can be a simple data type such as a string, a number, and a date, or it can be a complex type, such as ordered lists and associated objects. \nDocument databases are particularly suitable for managing document-oriented data or similar semi-structured data, such as websites with many read and write operations in the background, \napplications that use JSON data structures, or use nested structured non-standardized data\nRelational Vs. Document\nIn this diagram on your left you can see we have rows and columns, and in the right, we have a document database which has a similar structure to JSON. \nNow for the relational database, you must know what columns you have and so on. \nHowever, for a document database, you have data store like JSON object.\nThe document type is mostly used for CMS content management systems, blogging platforms, real-time analytics & e-commerce applications. \nIt should not use for complex transactions which require multiple operations or queries against varying aggregate structures.\nAdvantages of Document DB is Good performance (high concurrency), high flexibility, low complexity, and flexible data structure. Provides embedded document function to store frequently queried data in the same document. Indexes can be built based on either keys or content.\nAnd disadvantage is Lack of uniform query syntax.\nGraph database\nDescribing social relations and other data as points (vertex) and edges (Edge) and their properties, each graph can be regarded as a structured data. \nThe dots here represent entities, such as persons, companies, accounts or any other data items, similar to data records in a relational database or files in a document database; \n\"edges\" represent the relationship between points; \"attributes\" are It is the point-related feature that the user pays attention to. \nRelational databases imply the association relationship between different data in the data range .\nwhile in the graphic database, This relationship is directly defined and stored in the database, \nTraversing relationship is fast as they are already captured into the DB, and there is no need to calculate them.\nso the graph database is good at handling highly related data, suitable for social networking, pattern recognition, dependency analysis, recommendation systems, and path finding, and other problems that can be expressed as relationship graphs.\nAdvantages of graph database is High flexibility, supporting for complex graphics algorithms, and it can be used to build complex relationship map\nAnd disadvantage of graph database is High complexity, can only support a certain data size .\nDocument database includes mongoDB，CouchDB etc.\nGraph database includes Neo4j, infiniteGraph etc.\nColumn database includes Redis, DynamoDB etc.\nKey value database includes Hbase Cassandra, etc.\nIn this session we learned Four main types NoSQL Database.\nthank you for your attention, if you have any question, feel free to contact me.", "document_id": "doc_08e1d8c2"}
