{"extractions": [{"extraction_class": "TOPIC", "extraction_text": "Introduction to NoSQL Databases for Big Data", "char_interval": {"start_pos": 463, "end_pos": 3227}, "alignment_status": "match_fuzzy", "extraction_index": 1, "group_index": 0, "description": null, "attributes": null}, {"extraction_class": "SUMMARY", "extraction_text": "The lecture introduces NoSQL databases as a key component of big data storage architecture. It contrasts them with traditional relational databases (RDBMS), which struggle with the scale, unstructured nature, and distributed processing models (like MapReduce) of big data. RDBMS limitations include poor scalability, inefficiency with unstructured data, and rigidity against data segmentation. In contrast, NoSQL databases, built on distributed file systems, offer good scalability, effective processing of unstructured data, and support for high concurrency. The core characteristics of NoSQL databases are explained: no pre-defined data format, a shared-nothing architecture for improved speed, flexible scalability to add or remove nodes dynamically, data partitioning across multiple nodes for parallelism and fault tolerance, and asynchronous replication for fast writes, which leads to eventual consistency rather than the strict consistency found in RDBMS.", "char_interval": {"start_pos": 349, "end_pos": 352}, "alignment_status": "match_lesser", "extraction_index": 2, "group_index": 1, "description": null, "attributes": null}, {"extraction_class": "KEYWORDS", "extraction_text": "NoSQL, RDBMS, Big Data, Shared-nothing architecture, Data partitioning, Asynchronous replication, Scalability, Unstructured data, Distributed file system, Eventual consistency", "char_interval": null, "alignment_status": null, "extraction_index": 3, "group_index": 2, "description": null, "attributes": null}, {"extraction_class": "CONCEPT", "extraction_text": "Relational Database (RDBMS)", "char_interval": {"start_pos": 1693, "end_pos": 1769}, "alignment_status": "match_fuzzy", "extraction_index": 4, "group_index": 3, "description": null, "attributes": {"definition": "A traditional database system with good data consistency, a complete transaction mechanism, and a standardized query language. It is designed for structured data but faces challenges with big data due to poor scalability, difficulty processing unstructured data, and incompatibility with distributed computing models like MapReduce."}}, {"extraction_class": "CONCEPT", "extraction_text": "NoSQL Database", "char_interval": {"start_pos": 5564, "end_pos": 5578}, "alignment_status": "match_exact", "extraction_index": 5, "group_index": 4, "description": null, "attributes": {"definition": "A non-relational database based on distributed file systems designed for big data processing. It is characterized by good scalability, the ability to effectively process unorganized and semi-structured data, and support for high concurrency."}}, {"extraction_class": "CONCEPT", "extraction_text": "Shared-nothing architecture", "char_interval": {"start_pos": 4555, "end_pos": 4582}, "alignment_status": "match_fuzzy", "extraction_index": 6, "group_index": 5, "description": null, "attributes": {"definition": "A distributed computing architecture where each update request is satisfied by a single node in a computer cluster to eliminate resource contention. NoSQL databases use this to divide data sets and store them on local servers, improving system read and write speed."}}, {"extraction_class": "CONCEPT", "extraction_text": "Data partition", "char_interval": {"start_pos": 4973, "end_pos": 4987}, "alignment_status": "match_fuzzy", "extraction_index": 7, "group_index": 6, "description": null, "attributes": {"definition": "A technique used by NoSQL databases to distribute data records across multiple nodes. This is often done with replication to improve parallel performance and ensure there is no single point of failure."}}, {"extraction_class": "CONCEPT", "extraction_text": "Asynchronous replication", "char_interval": {"start_pos": 5300, "end_pos": 5324}, "alignment_status": "match_fuzzy", "extraction_index": 8, "group_index": 7, "description": null, "attributes": {"definition": "A log-based replication method where data can be written to a node as soon as possible, rather than being delayed by network transmission. Its disadvantage is that consistency is not always guaranteed, leading to eventual consistency."}}], "text": "Hello everyone, I am Haiying Che, from Institute of Data Science and knowledge Engineering\nSchool of Computer Science, in Beijing Institute of Technology, \nin this session, we discuss about what is NoSQL DB.\nThe big data computing system can be summarized into three categories: \nData storing system, Data processing system, Data application system\nThe data storage architecture is the foundation of big data computing. \nIn data storing system, there are 4 parts to accomplish different tasks, \nwhich is Data collection and modeling, Distributed file system, Distributed database/data warehouse and Unified Data Access Interface.\nwe learned data collection and modeling, distributed file system, now we look at database.\nDatabase normally include relational database like Oracle, SQL server, and NoSQL Database, like MongoDB, Hbase etc.\nThe distributed database and data warehouse built on the file system not only realize the storage management of data, but more importantly, it supports the fast data query function and data analysis service of the upper computing engine and application software. \nCurrently, there are many types of database products that support big data applications, and their storage structures and technologies used are also different. \nRelational database RDBMS has always been the mainstream of data storage management system with its good data consistency, complete transaction mechanism, standardized query language, high query efficiency, and mature technology. \nIts representative products include Oracle, MS SQL Server and My SQL. When faced with big data computing problems with large amounts of data and large amounts of unstructured or semi-structured data, relational databases face the following challenges:\n） Large-scale (PB-level) storage management of big data requires that the system has good flexibility and can be easily expanded in a distributed environment. \nHowever, the traditional relational database emphasizes data consistency and integrity and centralized deployment methods. Its scalability is poor, and it is difficult to adapt to the explosive growth of data\n） RDBMS is suitable for storage management of structured data based on strictly defined key indexes and data table storage modes, and can provide an efficient SQL-based query mechanism. But for unstructured or semi-structured data, RDMS is difficult to process, and query efficiency is greatly reduced\n） Big data calculation processing requires the storage structure to well support the upper-level calculation model.\nFor example, the Mapreduce calculation model adopts the Divide-and-Conquer strategy, which first divides a large data set into multiple subsets, and then runs the map program for each subset for processing. After the processing of the subset is completed, the reduce program is run to complete the summary of the calculation results, which requires the underlying data storage structure to support the division and fusion of this data set (or data table structure). \nDue to strict data consistency and completeness requirements of relational databases, it is difficult to perform such segmentation processing on data tables. so, it is difficult to support various calculation models for big data calculations\nIn recent years, non-relational databases based on distributed file systems that have emerged with big data processing (not only SQL, NoSQL)\nNow let’s watch a video about “How do NoSQL databases work”.\n播放视频的     0:00-6:27！！！\nfrom the video we understand How do NoSQL databases work; and advantages, disadvantages relational databases and NoSQL Database.\nnon-relational databases based on distributed file systems have good scalability, can effectively process unorganized and semi-structured data, and support high concurrency\nThe characteristics of the calculation model have been widely used in the Internet, medical and health, e-commerce and other fields. \nCompared with traditional relational databases, this type of NoSQL database has the following Common structure characters\n） No pre-defined data format is required\nWe don’t need to define a strict data table structure in advance. Each record of data may have different attributes and formats. When inserting data, there is no need to define their format in advance.\n） Shared nothing architecture\nNoSQL databases often divide data sets and store them on various local servers. \nThe performance of reading data from local disks is often better than that of reading data through network transmission, thereby improving the system's read and write speed.\n(A shared-nothing architecture (SN) is a distributed computing architecture in which each update request is satisfied by a single node (processor/memory/storage unit) in a computer cluster. \nThe intent is to eliminate resource contention among nodes. \n）Flexible and scalable\nNodes can be dynamically added or deleted while the system is running without downtime for maintenance, and data can be automatically migrated.\n) Data partition\nIn contrast to storing data on the same node, NoSQL databases partition data and distribute records across multiple nodes. \nIn addition, replication is usually performed at the same time as the partition, which not only improves parallel performance, but also ensures that there is no single point of failure.\n) Asynchronous replication\nNoSQL replication is often a log-based Asynchronous replication, so that data can be written to a node as soon as possible, rather than being delayed by network transmission. \nThe disadvantage is that consistency is not always guaranteed. NoSQL database provides ultimate consistency.\nIn this session, we learned what is NoSQL DB.\nthank you for your attention, if you have any question, feel free to contact me.", "document_id": "doc_91b90fd3"}
